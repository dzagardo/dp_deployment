datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String     @id @default(cuid())
  email      String     @unique
  role       String     // Role as a string
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  password   Password?
  notes      Note[]
  checklists Checklist[]
  datasets   Dataset[]  // Relation to Datasets
}

model Password {
  hash   String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id        String   @id @default(cuid())
  title     String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
}

model Checklist {
  id          String   @id @default(cuid())
  title       String
  description String? 
  items       String   
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      String
}

// New Dataset model
model Dataset {
  id             String   @id @default(cuid())
  name           String   // Descriptive name of the dataset
  filePath       String   // Path to the dataset file
  privacy_budget Float    // Privacy budget for the dataset
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade) // Link to the user who manages the dataset
  userId         String   // User reference
}
